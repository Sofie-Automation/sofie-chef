name: Create GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - id: create_release
        name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
  build-windows-binaries:
    name: Build Windows Binaries
    runs-on: windows-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22
        uses: actions/setup-node@v6
        with:
          node-version: '22'
      - name: restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Prepare Environment
        run: |
          corepack enable
          yarn --frozen-lockfile --network-timeout 1000000
      - name: Build
        run: |
          yarn build
      - name: Build Binary
        run: |
          yarn build:binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
  build-linux-binaries:
    name: Build Linux Binaries
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 22
        uses: actions/setup-node@v6
        with:
          node-version: '22'
      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v3
      - name: restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Prepare Environment
        run: |
          corepack enable
          yarn --frozen-lockfile --network-timeout 1000000
      - name: Build
        run: |
          yarn build
      - name: Build Binary
        run: |
          yarn build:binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # build-macos-binaries:
  #   name: Build MacOS Binaries
  #   runs-on: macos-latest
  #   needs: create-release
  #   continue-on-error: true
  #   steps:
  #     - uses: actions/checkout@v5
  #     - name: Use Node.js 20
  #       uses: actions/setup-node@v6
  #       with:
  #         node-version: '20'
  #     - name: restore node_modules
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
  #     - name: Prepare Environment
  #       run: |
  #         yarn --ignore-engines --frozen-lockfile --network-timeout 1000000
  #     - name: Build
  #       run: |
  #         yarn build
  #     - name: Build Binary
  #       run: |
  #         yarn build:binary
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         CSC_LINK: ${{ secrets.MAC_CSC_LINK }}
  #         CSC_KEY_PASSWORD: ${{ secrets.MAC_CSC_KEY_PASSWORD }}
  #         APPLEID: ${{ secrets.APPLEID }}
  #         APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
